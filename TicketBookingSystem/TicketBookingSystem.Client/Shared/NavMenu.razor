@using TicketBookingSystem.Shared.Dictionaries

<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Strona główna</MudNavLink>
    <AuthorizeView>
        <Authorized>
            <MudNavLink Href="tickets" Match="NavLinkMatch.Prefix" Icon="@Icons.Filled.FeaturedPlayList">Moje bilety</MudNavLink>
        </Authorized>
    </AuthorizeView>
    <MudNavGroup Title="Wydarzenia" Expanded="false" Icon="@Icons.Material.Filled.List">
        @foreach (var genre in ((MusicGenre[])Enum.GetValues(typeof(MusicGenre))).Select((value, i) => new { i, value }))
        {
            <MudNavLink Href="@GetEventsFilteredUrl(genre.i)">@GetGenreName(genre.value)</MudNavLink>
        }
    </MudNavGroup>
    <MudNavGroup Title="Artyści" Expanded="false" Icon="@Icons.Material.Filled.People">
        @foreach (var genre in ((MusicGenre[])Enum.GetValues(typeof(MusicGenre))).Select((value, i) => new { i, value }))
        {
            <MudNavLink Href="@GetArtistsFilteredUrl(genre.i)">@GetGenreName(genre.value)</MudNavLink>
        }
    </MudNavGroup>
</MudNavMenu>
@code {
    string GetEventsFilteredUrl(int i)
    {
        return $"events/{i}";
    }
    string GetArtistsFilteredUrl(int i)
    {
        return $"artists/{i}";
    }
    string GetGenreName(MusicGenre i)
    {
        return i == MusicGenre.None ? "Wszystkie" : i.GetDescription();
    }
}
