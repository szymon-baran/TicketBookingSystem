@using TicketBookingSystem.Shared.Domain
@using TicketBookingSystem.Shared
@inject IArtistService ArtistService
@inject NavigationManager NavigationManager

<MudGrid>
    @foreach (Artist artist in _artists)
    {
        <MudItem md="3" xs="12">
            <MudCard Class="rounded-lg">
                <MudCardMedia Image="@(artist.PhotoUrl == "" ? "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460__340.png" : artist.PhotoUrl)" Height="200" />
                <MudCardContent>
                    <MudText Typo="Typo.h5">@artist.NickName</MudText>
                    <MudText Typo="Typo.caption">@artist.FirstName @artist.LastName</MudText>
                </MudCardContent>
                <MudCardActions Class="mt-n3">
                    <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="@(() => RouteToDetails(@artist.Id))">Szczegóły</MudButton>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="@(() => RouteToEdit(@artist.Id))">Edytuj</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    }
    @if (_shouldRender && _pageCount > 1)
    {
        <MudItem xs="12" Class="d-flex justify-center flex-grow-1 gap-4">
            <MudPagination Color="Color.Primary" Count="@_pageCount" BoundaryCount="1" MiddleCount="3" SelectedChanged="@(e => GetArtists(e))" />
        </MudItem>
    }
</MudGrid>


@code {
    private PaginationParameters _paginationParameters = new();
    private List<Artist> _artists = new();
    private bool _shouldRender;
    private int _pageCount;

    protected override async Task OnInitializedAsync()
    {
        var response = await ArtistService.GetArtistsList(_paginationParameters);
        _artists = response.Items;
        _pageCount = response.MetaData.TotalPages;
        _shouldRender = true;
    }

    private async Task GetArtists(int page)
    {
        _paginationParameters.PageNumber = page;
        var response = await ArtistService.GetArtistsList(_paginationParameters);
        _artists = response.Items;
    }

    void RouteToDetails(int id)
    {
        NavigationManager.NavigateTo($"/artist/{id}");
    }

    void RouteToEdit(int id)
    {
        NavigationManager.NavigateTo($"/artist/edit/{id}");
    }
}
