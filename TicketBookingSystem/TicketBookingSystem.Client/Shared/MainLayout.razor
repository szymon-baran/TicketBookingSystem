@inherits LayoutComponentBase

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@(_isDarkMode ? Icons.Filled.LightMode : Icons.Filled.DarkMode)" Color="Color.Inherit" OnClick="@((e) => DarkModeToggle())" />
        <AuthorizeView>
            <Authorized>
                <MudText>Cześć, <MudLink href="authentication/profile" Typo="Typo.subtitle2" Color="Color.Inherit">@context.User.Identity?.Name</MudLink>!</MudText>
                <MudIconButton Icon="@Icons.Filled.Logout" Color="Color.Inherit" @onclick="BeginSignOut" />
            </Authorized>
            <NotAuthorized>
                <MudIconButton Icon="@Icons.Filled.Login" Color="Color.Inherit" href="authentication/login" />
            </NotAuthorized>
        </AuthorizeView>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/szymon-baran/TicketBookingSystem/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">MyApplication</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private MudTheme _theme = new();
    private bool _isDarkMode;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}