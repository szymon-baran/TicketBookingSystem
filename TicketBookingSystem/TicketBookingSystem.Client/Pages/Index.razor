@page "/"
@using TicketBookingSystem.Shared.Domain
@inject IEventService EventService

<PageTitle>Strona główna</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">System rezerwacji biletów</MudText>
<MudText Class="mb-8">Sposób na wyszukanie biletów na wydarzenia muzyczne w najlepszych cenach!</MudText>
<AuthorizeView>
    <NotAuthorized>
        <MudAlert Severity="Severity.Info">Aby uzyskać dostęp do pełnej wersji serwisu, zaloguj się <MudLink href="authentication/login" Typo="Typo.subtitle2" Color="Color.Inherit">tutaj</MudLink>.</MudAlert>
    </NotAuthorized>
    
</AuthorizeView>
<MudCarousel Class="mud-width-full" Style="height:500px; width:100%;" ItemsSource="@eventPhotoUrls" @bind-SelectedIndex="selectedIndex" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true">
    <ItemTemplate>
        <div class="d-flex flex-column flex-column" style="height:100%">
            <MudText Align="Align.Center" Style="font-size:20px;">@eventNames[selectedIndex]</MudText>
            <MudImage ObjectPosition="ObjectPosition.Top" Style="width:100%;" Src="@eventPhotoUrls[selectedIndex]" Fluid="true"></MudImage>
        </div>
    </ItemTemplate>
    
</MudCarousel>
@code {
    private int selectedIndex = 0;
    List<string> eventPhotoUrls = new();
    List<string> eventNames = new();

    protected override async Task OnInitializedAsync()
    {
        await EventService.GetEventsList();

        foreach (var item in EventService.Events)
        {
            eventPhotoUrls.Add(item.PhotoUrl);
            eventNames.Add(item.Name);
        }
    }
}